#pragma once
/*
 * Copyright (c) 2021 Qualcomm Technologies, Inc.
 * All Rights Reserved.
 * Confidential and Proprietary - Qualcomm Technologies, Inc.
 */

/** @file  ITVMAppLoader.idl */

/**
 * @brief
 * TVMAppLoader interface provides methods to load an App in the
 * TEE (Trusted Execute Environment)
 */

/** @cond */

// AUTOGENERATED FILE: DO NOT EDIT

#include <cstdint>
#include "object.h"
#include "proxy_base.hpp"

class ITVMAppLoader {
   public:
    static const int32_t ERROR_INVALID_UID = INT32_C(10);
    static const int32_t ERROR_MEM_HANDLE = INT32_C(11);
    static const int32_t ERROR_LOADING_APP = INT32_C(12);

    virtual ~ITVMAppLoader() {}

    virtual int32_t loadApp(uint32_t UID_val, uint32_t memparcel_handle_val, uint32_t mem_size_val, Object &appObject) = 0;
    virtual int32_t unloadApp(uint32_t UID_val) = 0;

   protected:
    static const ObjectOp OP_loadApp = 0;
    static const ObjectOp OP_unloadApp = 1;
};

class TVMAppLoader : public ITVMAppLoader, public ProxyBase {
   public:
    TVMAppLoader() {}
    TVMAppLoader(Object impl) : ProxyBase(impl) {}
    virtual ~TVMAppLoader() {}

    virtual int32_t loadApp(uint32_t UID_val, uint32_t memparcel_handle_val, uint32_t mem_size_val, Object &appObject) {
        ObjectArg a[2];
        struct s1 {
            uint32_t m_UID;
            uint32_t m_memparcel_handle;
            uint32_t m_mem_size;
        } i;
        a[0].b = (ObjectBuf) {&i, 12};
        i.m_UID = UID_val;
        i.m_memparcel_handle = memparcel_handle_val;
        i.m_mem_size = mem_size_val;

        int32_t result = invoke(OP_loadApp, a, ObjectCounts_pack(1, 0, 0, 1));
        appObject = a[1].o;
        return result;
    }

    virtual int32_t unloadApp(uint32_t UID_val) {
        ObjectArg a[1];
        a[0].b = (ObjectBuf) {&UID_val, sizeof(uint32_t)};

        return invoke(OP_unloadApp, a, ObjectCounts_pack(1, 0, 0, 0));
    }

};

